/*
Deployment script for JacquesBDSingular

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JacquesBDSingular"
:setvar DefaultFilePrefix "JacquesBDSingular"
:setvar DefaultDataPath "C:\Users\Jacques\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Jacques\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Basket]...';


GO
CREATE TABLE [dbo].[Basket] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [AuthUserId]  NVARCHAR (128) NOT NULL,
    [TotalAmount] MONEY          NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[BasketDetail]...';


GO
CREATE TABLE [dbo].[BasketDetail] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [BasketId]  INT           NOT NULL,
    [ProductId] INT           NOT NULL,
    [Quantity]  INT           NOT NULL,
    [Price]     MONEY         NOT NULL,
    [Time]      DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [ProductName] NVARCHAR (100) NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [Price]       MONEY          NOT NULL,
    [Image]       IMAGE          NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Basket]...';


GO
ALTER TABLE [dbo].[Basket]
    ADD DEFAULT 0 FOR [TotalAmount];


GO
PRINT N'Creating unnamed constraint on [dbo].[BasketDetail]...';


GO
ALTER TABLE [dbo].[BasketDetail]
    ADD DEFAULT 1 FOR [Quantity];


GO
PRINT N'Creating unnamed constraint on [dbo].[BasketDetail]...';


GO
ALTER TABLE [dbo].[BasketDetail]
    ADD DEFAULT getutcdate() FOR [Time];


GO
PRINT N'Creating [dbo].[FK_Basket_ToUser]...';


GO
ALTER TABLE [dbo].[Basket] WITH NOCHECK
    ADD CONSTRAINT [FK_Basket_ToUser] FOREIGN KEY ([AuthUserId]) REFERENCES [dbo].[User] ([AuthUserId]);


GO
PRINT N'Creating [dbo].[FK_BasketDetail_ToBasket]...';


GO
ALTER TABLE [dbo].[BasketDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_BasketDetail_ToBasket] FOREIGN KEY ([BasketId]) REFERENCES [dbo].[Basket] ([Id]);


GO
PRINT N'Creating [dbo].[FK_BasketDetail_ToProduct]...';


GO
ALTER TABLE [dbo].[BasketDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_BasketDetail_ToProduct] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating [dbo].[spAddress_Insert]...';


GO
CREATE PROCEDURE [dbo].[spAddress_Insert]
	@Id int output,
	@Type nvarchar(50),
	@AddressName nvarchar(200),
	@Street nvarchar(100),
	@Suburb nvarchar(100),
	@City nvarchar(100),
	@PostalCode nvarchar(50),
	@AuthUserId nvarchar(128)
AS

BEGIN

	SET NOCOUNT ON;

	insert into dbo.Address([Type], AddressName, Street,Suburb, City, PostalCode, AuthUserId)
	values (@Type, @AddressName, @Street,Suburb, @City, @PostalCode, @AuthUserId);

	SELECT CAST(SCOPE_IDENTITY() as int);

END
GO
PRINT N'Creating [dbo].[spUser_Insert]...';


GO
CREATE PROCEDURE [dbo].[spUser_Insert]
	@Id int output,
	@AuthUserId nvarchar(128),
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@EmailAddress nvarchar(256),
	@CellPhone varchar(20)

AS

BEGIN

	SET NOCOUNT ON;

	insert into [dbo].[User](AuthUserId, FirstName, LastName, EmailAddress, CellPhone)
	values (@AuthUserId, @FirstName, @LastName, @EmailAddress, @CellPhone);

	select @Id =@@IDENTITY;

END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Basket] WITH CHECK CHECK CONSTRAINT [FK_Basket_ToUser];

ALTER TABLE [dbo].[BasketDetail] WITH CHECK CHECK CONSTRAINT [FK_BasketDetail_ToBasket];

ALTER TABLE [dbo].[BasketDetail] WITH CHECK CHECK CONSTRAINT [FK_BasketDetail_ToProduct];


GO
PRINT N'Update complete.';


GO
